
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GeneratePropsCpp.js
 */

#include <react/renderer/components/rnstripe/Props.h>
#include <folly/dynamic.h>
#include <react/renderer/components/image/conversions.h>
#include <react/renderer/core/PropsParserContext.h>
#include <react/renderer/core/propsConversions.h>

namespace facebook::react {

AddressSheetViewProps::AddressSheetViewProps(
    const PropsParserContext &context,
    const AddressSheetViewProps &sourceProps,
    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),

    visible(convertRawProp(context, rawProps, "visible", sourceProps.visible, {false})),
    presentationStyle(convertRawProp(context, rawProps, "presentationStyle", sourceProps.presentationStyle, {"popover"})),
    animationStyle(convertRawProp(context, rawProps, "animationStyle", sourceProps.animationStyle, {"slide"})),
    appearance(convertRawProp(context, rawProps, "appearance", sourceProps.appearance, {})),
    defaultValues(convertRawProp(context, rawProps, "defaultValues", sourceProps.defaultValues, {})),
    additionalFields(convertRawProp(context, rawProps, "additionalFields", sourceProps.additionalFields, {})),
    allowedCountries(convertRawProp(context, rawProps, "allowedCountries", sourceProps.allowedCountries, {})),
    autocompleteCountries(convertRawProp(context, rawProps, "autocompleteCountries", sourceProps.autocompleteCountries, {})),
    primaryButtonTitle(convertRawProp(context, rawProps, "primaryButtonTitle", sourceProps.primaryButtonTitle, {})),
    sheetTitle(convertRawProp(context, rawProps, "sheetTitle", sourceProps.sheetTitle, {})),
    googlePlacesApiKey(convertRawProp(context, rawProps, "googlePlacesApiKey", sourceProps.googlePlacesApiKey, {}))
      {}
AddToWalletButtonProps::AddToWalletButtonProps(
    const PropsParserContext &context,
    const AddToWalletButtonProps &sourceProps,
    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),

    iOSButtonStyle(convertRawProp(context, rawProps, "iOSButtonStyle", sourceProps.iOSButtonStyle, {"onDarkBackground"})),
    androidAssetSource(convertRawProp(context, rawProps, "androidAssetSource", sourceProps.androidAssetSource, {})),
    testEnv(convertRawProp(context, rawProps, "testEnv", sourceProps.testEnv, {false})),
    cardDetails(convertRawProp(context, rawProps, "cardDetails", sourceProps.cardDetails, {})),
    token(convertRawProp(context, rawProps, "token", sourceProps.token, {})),
    ephemeralKey(convertRawProp(context, rawProps, "ephemeralKey", sourceProps.ephemeralKey, {}))
      {}
ApplePayButtonProps::ApplePayButtonProps(
    const PropsParserContext &context,
    const ApplePayButtonProps &sourceProps,
    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),

    disabled(convertRawProp(context, rawProps, "disabled", sourceProps.disabled, {false})),
    type(convertRawProp(context, rawProps, "type", sourceProps.type, {0})),
    buttonStyle(convertRawProp(context, rawProps, "buttonStyle", sourceProps.buttonStyle, {0})),
    borderRadius(convertRawProp(context, rawProps, "borderRadius", sourceProps.borderRadius, {4}))
      {}
AuBECSDebitFormProps::AuBECSDebitFormProps(
    const PropsParserContext &context,
    const AuBECSDebitFormProps &sourceProps,
    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),

    companyName(convertRawProp(context, rawProps, "companyName", sourceProps.companyName, {})),
    formStyle(convertRawProp(context, rawProps, "formStyle", sourceProps.formStyle, {}))
      {}
CardFieldProps::CardFieldProps(
    const PropsParserContext &context,
    const CardFieldProps &sourceProps,
    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),

    autofocus(convertRawProp(context, rawProps, "autofocus", sourceProps.autofocus, {false})),
    cardStyle(convertRawProp(context, rawProps, "cardStyle", sourceProps.cardStyle, {})),
    countryCode(convertRawProp(context, rawProps, "countryCode", sourceProps.countryCode, {})),
    dangerouslyGetFullCardDetails(convertRawProp(context, rawProps, "dangerouslyGetFullCardDetails", sourceProps.dangerouslyGetFullCardDetails, {false})),
    disabled(convertRawProp(context, rawProps, "disabled", sourceProps.disabled, {false})),
    onBehalfOf(convertRawProp(context, rawProps, "onBehalfOf", sourceProps.onBehalfOf, {})),
    placeholders(convertRawProp(context, rawProps, "placeholders", sourceProps.placeholders, {})),
    postalCodeEnabled(convertRawProp(context, rawProps, "postalCodeEnabled", sourceProps.postalCodeEnabled, {false})),
    preferredNetworks(convertRawProp(context, rawProps, "preferredNetworks", sourceProps.preferredNetworks, {}))
      {}
CardFormProps::CardFormProps(
    const PropsParserContext &context,
    const CardFormProps &sourceProps,
    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),

    autofocus(convertRawProp(context, rawProps, "autofocus", sourceProps.autofocus, {false})),
    cardStyle(convertRawProp(context, rawProps, "cardStyle", sourceProps.cardStyle, {})),
    dangerouslyGetFullCardDetails(convertRawProp(context, rawProps, "dangerouslyGetFullCardDetails", sourceProps.dangerouslyGetFullCardDetails, {false})),
    defaultValues(convertRawProp(context, rawProps, "defaultValues", sourceProps.defaultValues, {})),
    disabled(convertRawProp(context, rawProps, "disabled", sourceProps.disabled, {false})),
    placeholders(convertRawProp(context, rawProps, "placeholders", sourceProps.placeholders, {})),
    postalCodeEnabled(convertRawProp(context, rawProps, "postalCodeEnabled", sourceProps.postalCodeEnabled, {false})),
    preferredNetworks(convertRawProp(context, rawProps, "preferredNetworks", sourceProps.preferredNetworks, {}))
      {}
EmbeddedPaymentElementViewProps::EmbeddedPaymentElementViewProps(
    const PropsParserContext &context,
    const EmbeddedPaymentElementViewProps &sourceProps,
    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),

    configuration(convertRawProp(context, rawProps, "configuration", sourceProps.configuration, {})),
    intentConfiguration(convertRawProp(context, rawProps, "intentConfiguration", sourceProps.intentConfiguration, {}))
      {}
GooglePayButtonProps::GooglePayButtonProps(
    const PropsParserContext &context,
    const GooglePayButtonProps &sourceProps,
    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),

    type(convertRawProp(context, rawProps, "type", sourceProps.type, {-1})),
    appearance(convertRawProp(context, rawProps, "appearance", sourceProps.appearance, {0})),
    borderRadius(convertRawProp(context, rawProps, "borderRadius", sourceProps.borderRadius, {0}))
      {}
StripeContainerProps::StripeContainerProps(
    const PropsParserContext &context,
    const StripeContainerProps &sourceProps,
    const RawProps &rawProps): ViewProps(context, sourceProps, rawProps),

    keyboardShouldPersistTaps(convertRawProp(context, rawProps, "keyboardShouldPersistTaps", sourceProps.keyboardShouldPersistTaps, {false}))
      {}

} // namespace facebook::react
